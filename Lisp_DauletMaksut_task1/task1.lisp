(setq input ' (A(B(C(D))(E(F)(G(H))))(J(K(L(M)(N(P))))))   )


(print "* Daulet Maksut *")
(terpri)
;Task 1 A
(print "1 (A):")
(terpri)
(defun doListPrinter (data)
	(if (not data)
		(return-from doListPrinter nil)
	)
	(setf retList '())
	(dolist (x data)
		(format t "~S " (first x))
		(setf retList (append retList (copy-list (rest x))))
	)
	(terpri)
	(doListPrinter retList)
)
(setq input (list input))
(doListPrinter input)

;Task 1 B
(print "1 (B):")
(terpri)
(defun childPrinter (data)
	(if (not data)
		(return-from childPrinter nil)
	)
	(dolist (x data)
		(format t "~S " (first x))
	)
)


(defun doListChildPrinter (data)
	(if (not data)
		(return-from doListChildPrinter nil)
	)
	(setf retList '())
	(dolist (x data)
		(format t "~S, " (first x))
		(setf retList (append retList (copy-list (rest x))))
		(setf childrens (copy-list (rest x)))
		(childPrinter childrens)
		(terpri)
	)
	(doListChildPrinter retList)
)

(doListChildPrinter input)